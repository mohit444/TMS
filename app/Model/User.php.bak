<?php
App::uses('BlowfishPasswordHasher', 'Controller/Component/Auth');
class User extends AppModel{

    public $actsAs = array('Tree' => 'nested');
    public $hasAndBelongsToMany = array('Application');
    public $hasMany = array(
		'Task',
		'ApplicationsUser');
    public $displayField = 'username';



    public $validate = array(
        'mobile' => array(
            'rule1' => array(
                'rule' => 'numeric',
                'message' => 'Only numbers allowed',
                'last' => false
            ),
            'rule2' => array(
                'rule' => array('minLength', 10),
                'message' => 'Minimum length of 10 characters'
            )
        )
    );




    public function beforeFind($queryData = array()) {
         parent::beforeFind($queryData);
        $user = CakeSession::read("Auth.User");
#echo "Before Condition <br >";print_r($queryData);
        if($user['role'] == 'PM'){

                $defaultConditions = array('User.flag_delete' => 0);
                $defaultConditions['OR'] = array(
                    array('User.role' => array('TL','SSE','SE','QA')),
                    array('User.id' => $user['id'])
                );
                $queryData['conditions'][] =  $defaultConditions;


        }
        elseif($user['role'] == 'TL'){
            $defaultConditions = array('User.flag_delete' => 0);
            $defaultConditions['OR'] = array(
                array('User.role' => array('SSE','SE','QA')),
                array('User.id' => $user['id'])
            );
            $queryData['conditions'][] = am($queryData['conditions'], $defaultConditions);

        }
        elseif($user['role'] == 'SE' || $user['role'] == 'SSE' || $user['role'] == 'QA'){
            $defaultConditions = array('User.flag_delete' => 0 , 'User.id' => $user['id']);
            $queryData['conditions'][] =  $defaultConditions;
        }
        elseif($user['role'] == 'EMM'){
            $defaultConditions = array('User.flag_delete' => 0);
            $queryData['conditions'][] =  $defaultConditions;
        }

        #echo "After Condition <br >";print_r($queryData);
        return $queryData;
    }


	public function beforeSave($option = array()){

        if(isset($this->data['User']['password'])){
            $passwordHasher= new BlowfishPasswordHasher();
            $this->data['User']['password']=$passwordHasher->hash($this->data['User']['password']);
        }
    }


}
?>
